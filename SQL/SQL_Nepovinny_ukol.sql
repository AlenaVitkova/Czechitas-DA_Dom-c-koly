CREATE OR REPLACE TEMPORARY TABLE TITLES_RATING AS
SELECT t1.*, t2.AVERAGERATING, t2.numvotes
FROM SCH_CZECHITA.IMDB_TITLES AS t1 
INNER JOIN SCH_CZECHITA.IMDB_RATINGS AS t2  
ON t1.TCONST = t2.TCONST
ORDER BY t1.TCONST ASC;

-- k tabulce TITLES_RATING přidám nově vytvořený sloupec TITLETYPE_NEW pomocí CASE
CREATE OR REPLACE TEMPORARY TABLE TEMP_TITLES_RATING AS                  
SELECT *,
    CASE
        WHEN TITLETYPE IN('movie', 'short', 'tvMovie', 'tvShort') THEN 'Movie'
        WHEN TITLETYPE IN('tvSeries', 'tvMiniSeries') THEN 'TV Show'
    END AS TITLETYPE_NEW
FROM TITLES_RATING;

CREATE OR REPLACE TEMPORARY TABLE NETFLIX_IMDB AS
SELECT TR.*, 
    NT.* EXCLUDE(__HEVO__INGESTED_AT,__hevo__marked_deleted),
    NT.__HEVO__INGESTED_AT AS __HEVO__INGESTED_AT_2, 
    NT.__hevo__marked_deleted AS __hevo__marked_deleted_2
FROM TEMP_TITLES_RATING AS TR
INNER JOIN SCH_CZECHITA.NETFLIX_TITLES AS NT
ON TR.PRIMARYTITLE = NT.TITLE AND TR.STARTYEAR = NT.RELEASE_YEAR AND TR.TITLETYPE_NEW = NT.TYPE
;


SELECT SHOW_ID, COUNT(SHOW_ID) AS Pocet_Duplicit
FROM NETFLIX_IMDB
GROUP BY SHOW_ID
HAVING COUNT(SHOW_ID)>0
;

SELECT COUNT(DISTINCT SHOW_ID)
FROM NETFLIX_IMDB
;
-- Hodnot SHOW_ID je 504.

SELECT SHOW_ID, COUNT(SHOW_ID)
FROM NETFLIX_IMDB
GROUP BY SHOW_ID
HAVING COUNT(SHOW_ID)>0;